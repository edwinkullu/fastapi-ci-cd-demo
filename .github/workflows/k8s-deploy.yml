name: Deploy FastAPI App to AWS EKS

on:
  push:
    branches:
      - '**'  # trigger on all branches
    # Remove 'paths' restriction for now to ensure it triggers

env:
  TF_WORKING_DIR: ./terraform
  DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/fastapi:latest

jobs:
  provision:
    name: üèóÔ∏è Provision EKS Cluster
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        region: ${{ secrets.TF_VAR_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: terraform init

    - name: Terraform Apply
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: terraform apply -auto-approve

  docker:
    name: üê≥ Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: provision

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Login to DockerHub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build & Push Docker Image
      run: |
        docker build -t ${{ env.DOCKER_IMAGE }} .
        docker push ${{ env.DOCKER_IMAGE }}

  deploy:
    name: üöÄ Deploy to EKS
    runs-on: ubuntu-latest
    needs: [provision, docker]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        region: ${{ secrets.TF_VAR_REGION }}

    - name: Set up Kubeconfig
      run: |
